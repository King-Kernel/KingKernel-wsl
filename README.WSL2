WSL2 Kernel Build Instructions

1. Install a recent Linux distribution
	Microsoft used Ubuntu 16.04.6.

2. Install GCC and other essential development packages, flex, bison, openssl headers, and libelf headers
	Example command for Ubuntu: sudo apt install build-essential flex bison libssl-dev libelf-dev
	Microsoft used versions 12.1ubuntu2, 2.6.0-11, 2:3.0.4.dfsg-1, 1.0.2g-1ubuntu4.15, and 0.165-3ubuntu1.1 respectively.

3. Select the WSL2 config and build the kernel
	Command: make wsl2_defconfig all

4. Replace the kernel used by the WSL2 utility VM on Windows
	Product path: arch/x86/boot/compressed/vmlinux.bin
	WSL kernel path: C:\Windows\System32\lxss\tools\kernel

	BE SURE TO MAKE A BACKUP OF THE OFFICIAL KERNEL PRIOR TO REPLACEMENT!
	The kernel can be replaced using the following steps:
		1. Shut down the utility VM: wsl --shutdown
		2. (one-time) Take ownership of the Windows "kernel" file using Explorer (Properties -> Security -> Advanced -> Owner -> Change)
		3. (one-time) Grant "Full Control" of the Windows "kernel" file to Administrators and/or your user of choice
		4. Rename the new kernel file (vmlinux.bin) to "kernel"
		5. Copy the new "kernel" file to C:\Windows\System32\lxss\tools and choose to overwrite the file

	Be sure to *copy and overwrite* the kernel. Doing otherwise (moving, deleting and recreating, etc.) will invalidate the hard link in WinSxS, which may cause issues when updating or repairing the system in the future. You have been warned.

Note: Having any custom kernel installed currently breaks distribution installation and conversion for unknown reasons and causes the process to lock up. A temporary workaround is to use the official kernel for the aforementioned tasks, then revert back to your custom kernel afterwards.
